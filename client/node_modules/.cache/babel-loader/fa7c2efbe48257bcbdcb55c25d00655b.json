{"ast":null,"code":"import actions from \"./actions\";\n\nfunction productsReducer(state, action) {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case actions.LOADING_CATEGORIES:\n      return { ...state,\n        isLoadingCategories: payload\n      };\n\n    case actions.LOADING_PRODUCTS:\n      return { ...state,\n        isLoadingProducts: payload\n      };\n\n    case actions.FETCH_PRODUCTS:\n      return { ...state,\n        products: payload\n      };\n\n    case actions.FETCH_ERROR:\n      return { ...state,\n        error: payload\n      };\n\n    case actions.FETCH_CATEGORIES:\n      return { ...state,\n        categories: payload\n      };\n\n    case actions.SET_FILTERED_PRODUCTS:\n      return { ...state,\n        filteredProducts: [...state.products]\n      };\n\n    case actions.FILTER_BY_CATEGORY:\n      const filteredProducts = state.products.filter(product => product.category === payload || product.subcategory === payload);\n      return { ...state,\n        filteredProducts\n      };\n\n    case actions.FILTER_BY_PRICE:\n      console.log(payload);\n      return { ...state,\n        filteredProducts: state.products.filter(product => product.price >= payload[0] && product.price <= payload[1])\n      };\n\n    default:\n      if (!action.hasOwnProperty(\"type\")) {\n        throw new Error(\"productsReducer: You must set type of action\");\n      }\n\n      throw new Error(`productsReducer: Cant find action of this type: ${type}`);\n  }\n}\n\nexport default productsReducer;","map":{"version":3,"sources":["/home/data909/Projects/bazar-app/src/contexts/ProductsContext/productsReducer.js"],"names":["actions","productsReducer","state","action","type","payload","LOADING_CATEGORIES","isLoadingCategories","LOADING_PRODUCTS","isLoadingProducts","FETCH_PRODUCTS","products","FETCH_ERROR","error","FETCH_CATEGORIES","categories","SET_FILTERED_PRODUCTS","filteredProducts","FILTER_BY_CATEGORY","filter","product","category","subcategory","FILTER_BY_PRICE","console","log","price","hasOwnProperty","Error"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,WAApB;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgCC,MAAhC,EAAwC;AACtC,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AACA,UAAQC,IAAR;AACE,SAAKJ,OAAO,CAACM,kBAAb;AACE,aAAO,EACL,GAAGJ,KADE;AAELK,QAAAA,mBAAmB,EAAEF;AAFhB,OAAP;;AAIF,SAAKL,OAAO,CAACQ,gBAAb;AACE,aAAO,EACL,GAAGN,KADE;AAELO,QAAAA,iBAAiB,EAAEJ;AAFd,OAAP;;AAIF,SAAKL,OAAO,CAACU,cAAb;AACE,aAAO,EACL,GAAGR,KADE;AAELS,QAAAA,QAAQ,EAAEN;AAFL,OAAP;;AAIF,SAAKL,OAAO,CAACY,WAAb;AACE,aAAO,EACL,GAAGV,KADE;AAELW,QAAAA,KAAK,EAAER;AAFF,OAAP;;AAIF,SAAKL,OAAO,CAACc,gBAAb;AACE,aAAO,EACL,GAAGZ,KADE;AAELa,QAAAA,UAAU,EAAEV;AAFP,OAAP;;AAIF,SAAKL,OAAO,CAACgB,qBAAb;AACE,aAAO,EACL,GAAGd,KADE;AAELe,QAAAA,gBAAgB,EAAE,CAAC,GAAGf,KAAK,CAACS,QAAV;AAFb,OAAP;;AAKF,SAAKX,OAAO,CAACkB,kBAAb;AACE,YAAMD,gBAAgB,GAAGf,KAAK,CAACS,QAAN,CAAeQ,MAAf,CACtBC,OAAD,IACEA,OAAO,CAACC,QAAR,KAAqBhB,OAArB,IAAgCe,OAAO,CAACE,WAAR,KAAwBjB,OAFnC,CAAzB;AAKA,aAAO,EACL,GAAGH,KADE;AAELe,QAAAA;AAFK,OAAP;;AAKF,SAAKjB,OAAO,CAACuB,eAAb;AACEC,MAAAA,OAAO,CAACC,GAAR,CAAYpB,OAAZ;AACA,aAAO,EACL,GAAGH,KADE;AAELe,QAAAA,gBAAgB,EAAEf,KAAK,CAACS,QAAN,CAAeQ,MAAf,CACfC,OAAD,IACEA,OAAO,CAACM,KAAR,IAAiBrB,OAAO,CAAC,CAAD,CAAxB,IAA+Be,OAAO,CAACM,KAAR,IAAiBrB,OAAO,CAAC,CAAD,CAFzC;AAFb,OAAP;;AAQF;AACE,UAAI,CAACF,MAAM,CAACwB,cAAP,CAAsB,MAAtB,CAAL,EAAoC;AAClC,cAAM,IAAIC,KAAJ,CAAU,8CAAV,CAAN;AACD;;AACD,YAAM,IAAIA,KAAJ,CACH,mDAAkDxB,IAAK,EADpD,CAAN;AAzDJ;AA6DD;;AAED,eAAeH,eAAf","sourcesContent":["import actions from \"./actions\";\n\nfunction productsReducer(state, action) {\n  const { type, payload } = action;\n  switch (type) {\n    case actions.LOADING_CATEGORIES:\n      return {\n        ...state,\n        isLoadingCategories: payload,\n      };\n    case actions.LOADING_PRODUCTS:\n      return {\n        ...state,\n        isLoadingProducts: payload,\n      };\n    case actions.FETCH_PRODUCTS:\n      return {\n        ...state,\n        products: payload,\n      };\n    case actions.FETCH_ERROR:\n      return {\n        ...state,\n        error: payload,\n      };\n    case actions.FETCH_CATEGORIES:\n      return {\n        ...state,\n        categories: payload,\n      };\n    case actions.SET_FILTERED_PRODUCTS:\n      return {\n        ...state,\n        filteredProducts: [...state.products],\n      };\n\n    case actions.FILTER_BY_CATEGORY:\n      const filteredProducts = state.products.filter(\n        (product) =>\n          product.category === payload || product.subcategory === payload\n      );\n\n      return {\n        ...state,\n        filteredProducts,\n      };\n\n    case actions.FILTER_BY_PRICE:\n      console.log(payload);\n      return {\n        ...state,\n        filteredProducts: state.products.filter(\n          (product) =>\n            product.price >= payload[0] && product.price <= payload[1]\n        ),\n      };\n\n    default:\n      if (!action.hasOwnProperty(\"type\")) {\n        throw new Error(\"productsReducer: You must set type of action\");\n      }\n      throw new Error(\n        `productsReducer: Cant find action of this type: ${type}`\n      );\n  }\n}\n\nexport default productsReducer;\n"]},"metadata":{},"sourceType":"module"}