{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/data909/Projects/bazar-app/src/shared/ChangeQuantity/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport AddToCart from \"../AddToCart\";\nimport { CartContext } from \"../context/CartContext\";\n\nfunction ChangeQuantity({\n  product,\n  id,\n  quantity,\n  isAddToCart = false\n}) {\n  _s();\n\n  const [value, setValue] = useState(quantity || 1);\n  const {\n    cart,\n    changeQuantity,\n    updateCart\n  } = useContext(CartContext); // useEffect(() => {\n  //   setValue(quantity);\n  // }, [quantity]);\n\n  useEffect(() => {\n    if (cart.isUpdate) changeQuantity(id, parseInt(value));\n    updateCart(false);\n  }, [cart.isUpdate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setValue(prevValue => parseInt(prevValue) - 1);\n      },\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: e => {\n        setValue(parseInt(e.target.value));\n      },\n      type: \"number\",\n      value: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), quantity, \"//\", value, /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setValue(prevValue => parseInt(prevValue) + 1);\n      },\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), isAddToCart && /*#__PURE__*/_jsxDEV(AddToCart, {\n      quantity: value + quantity,\n      item: product\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ChangeQuantity, \"i5xH4+cE4N8OQnyk4XQ5vU+phOU=\");\n\n_c = ChangeQuantity;\nexport default ChangeQuantity;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChangeQuantity\");","map":{"version":3,"sources":["/home/data909/Projects/bazar-app/src/shared/ChangeQuantity/index.js"],"names":["React","useContext","useEffect","useState","AddToCart","CartContext","ChangeQuantity","product","id","quantity","isAddToCart","value","setValue","cart","changeQuantity","updateCart","isUpdate","parseInt","prevValue","e","target"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,SAASC,WAAT,QAA4B,wBAA5B;;AAEA,SAASC,cAAT,CAAwB;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,EAAX;AAAeC,EAAAA,QAAf;AAAyBC,EAAAA,WAAW,GAAG;AAAvC,CAAxB,EAAwE;AAAA;;AACtE,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAACM,QAAQ,IAAI,CAAb,CAAlC;AACA,QAAM;AAAEI,IAAAA,IAAF;AAAQC,IAAAA,cAAR;AAAwBC,IAAAA;AAAxB,MAAuCd,UAAU,CAACI,WAAD,CAAvD,CAFsE,CAItE;AACA;AACA;;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIW,IAAI,CAACG,QAAT,EAAmBF,cAAc,CAACN,EAAD,EAAKS,QAAQ,CAACN,KAAD,CAAb,CAAd;AACnBI,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAHQ,EAGN,CAACF,IAAI,CAACG,QAAN,CAHM,CAAT;AAIA,sBACE;AAAA,4BACE;AACE,MAAA,OAAO,EAAE,MAAM;AACbJ,QAAAA,QAAQ,CAAEM,SAAD,IAAeD,QAAQ,CAACC,SAAD,CAAR,GAAsB,CAAtC,CAAR;AACD,OAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAQE;AACE,MAAA,QAAQ,EAAGC,CAAD,IAAO;AACfP,QAAAA,QAAQ,CAACK,QAAQ,CAACE,CAAC,CAACC,MAAF,CAAST,KAAV,CAAT,CAAR;AACD,OAHH;AAIE,MAAA,IAAI,EAAC,QAJP;AAKE,MAAA,KAAK,EAAEA;AALT;AAAA;AAAA;AAAA;AAAA,YARF,EAeGF,QAfH,QAeeE,KAff,eAgBE;AACE,MAAA,OAAO,EAAE,MAAM;AACbC,QAAAA,QAAQ,CAAEM,SAAD,IAAeD,QAAQ,CAACC,SAAD,CAAR,GAAsB,CAAtC,CAAR;AACD,OAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBF,EAuBGR,WAAW,iBAAI,QAAC,SAAD;AAAW,MAAA,QAAQ,EAAEC,KAAK,GAAGF,QAA7B;AAAuC,MAAA,IAAI,EAAEF;AAA7C;AAAA;AAAA;AAAA;AAAA,YAvBlB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD;;GAvCQD,c;;KAAAA,c;AAyCT,eAAeA,cAAf","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport AddToCart from \"../AddToCart\";\nimport { CartContext } from \"../context/CartContext\";\n\nfunction ChangeQuantity({ product, id, quantity, isAddToCart = false }) {\n  const [value, setValue] = useState(quantity || 1);\n  const { cart, changeQuantity, updateCart } = useContext(CartContext);\n\n  // useEffect(() => {\n  //   setValue(quantity);\n  // }, [quantity]);\n\n  useEffect(() => {\n    if (cart.isUpdate) changeQuantity(id, parseInt(value));\n    updateCart(false);\n  }, [cart.isUpdate]);\n  return (\n    <div>\n      <button\n        onClick={() => {\n          setValue((prevValue) => parseInt(prevValue) - 1);\n        }}\n      >\n        -\n      </button>\n      <input\n        onChange={(e) => {\n          setValue(parseInt(e.target.value));\n        }}\n        type=\"number\"\n        value={value}\n      />\n      {quantity}//{value}\n      <button\n        onClick={() => {\n          setValue((prevValue) => parseInt(prevValue) + 1);\n        }}\n      >\n        +\n      </button>\n      {isAddToCart && <AddToCart quantity={value + quantity} item={product} />}\n    </div>\n  );\n}\n\nexport default ChangeQuantity;\n"]},"metadata":{},"sourceType":"module"}