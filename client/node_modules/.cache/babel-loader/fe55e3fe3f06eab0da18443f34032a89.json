{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useRef, useState } from \"react\";\nexport default function useSlider(items, transitions, slider) {\n  _s();\n\n  const [counter, setCounter] = useState(1);\n  const [isAuto, setIsAuto] = useState(true);\n  const auto = useRef();\n  const moveNext = useRef(() => {});\n  const makeInterval = useRef(() => {});\n  const newItems = [{ ...items[items.length - 1]\n  }, ...items, { ...items[0]\n  }];\n\n  function movePrev() {\n    setCounter(prevCounter => {\n      if (prevCounter === 0) {\n        return prevCounter;\n      }\n\n      return prevCounter - 1;\n    });\n  }\n\n  moveNext.current = () => {\n    // slider.current.style.transition = transitions.auto;\n    setCounter(prevCounter => {\n      if (counter >= newItems.length - 1) {\n        return 1;\n      }\n\n      return prevCounter + 1;\n    });\n  };\n\n  function clickPrev() {\n    setIsAuto(false);\n    slider.current.style.transition = transitions.manual;\n    movePrev();\n  }\n\n  function clickNext() {\n    setIsAuto(false);\n    slider.current.style.transition = transitions.manual;\n    moveNext.current();\n  }\n\n  function transitionEnd() {\n    if (counter === 0) {\n      slider.current.style.transition = transitions.end;\n      setCounter(newItems.length - 2);\n      return;\n    }\n\n    if (counter === 5) {\n      slider.current.style.transition = transitions.end;\n      setCounter(1);\n      return;\n    }\n  }\n\n  makeInterval.current = () => {\n    console.log(\"make interval\");\n    auto.current = setInterval(() => {\n      slider.current.style.transition = transitions.auto;\n      moveNext.current();\n    }, 3000);\n  };\n\n  useEffect(() => {\n    if (isAuto) {\n      makeInterval.current();\n    } else {\n      clearInterval(auto.current);\n    }\n\n    setIsAuto(true);\n    return () => {\n      clearInterval(auto);\n    };\n  }, [isAuto, makeInterval]);\n  useEffect(() => {\n    let offset = 100 * counter;\n    slider.current.style.transform = `translateX(-${offset}%)`;\n  }, [counter, slider]);\n  return {\n    transitionEnd,\n    clickPrev,\n    clickNext,\n    items: newItems\n  };\n}\n\n_s(useSlider, \"OIKRyXAxTaZWW9/1vxAJzaOTT5M=\");","map":{"version":3,"sources":["/home/data909/Projects/bazar-app/src/hooks/useSlider.js"],"names":["useEffect","useRef","useState","useSlider","items","transitions","slider","counter","setCounter","isAuto","setIsAuto","auto","moveNext","makeInterval","newItems","length","movePrev","prevCounter","current","clickPrev","style","transition","manual","clickNext","transitionEnd","end","console","log","setInterval","clearInterval","offset","transform"],"mappings":"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","sourcesContent":["import { useEffect, useRef, useState } from \"react\";\n\nexport default function useSlider(items, transitions, slider) {\n  const [counter, setCounter] = useState(1);\n  const [isAuto, setIsAuto] = useState(true);\n\n  const auto = useRef();\n  const moveNext = useRef(() => {});\n  const makeInterval = useRef(() => {});\n  const newItems = [{ ...items[items.length - 1] }, ...items, { ...items[0] }];\n\n  function movePrev() {\n    setCounter((prevCounter) => {\n      if (prevCounter === 0) {\n        return prevCounter;\n      }\n      return prevCounter - 1;\n    });\n  }\n\n  moveNext.current = () => {\n    // slider.current.style.transition = transitions.auto;\n    setCounter((prevCounter) => {\n      if (counter >= newItems.length - 1) {\n        return 1;\n      }\n      return prevCounter + 1;\n    });\n  };\n\n  function clickPrev() {\n    setIsAuto(false);\n    slider.current.style.transition = transitions.manual;\n    movePrev();\n  }\n\n  function clickNext() {\n    setIsAuto(false);\n    slider.current.style.transition = transitions.manual;\n    moveNext.current();\n  }\n\n  function transitionEnd() {\n    if (counter === 0) {\n      slider.current.style.transition = transitions.end;\n      setCounter(newItems.length - 2);\n      return;\n    }\n\n    if (counter === 5) {\n      slider.current.style.transition = transitions.end;\n      setCounter(1);\n      return;\n    }\n  }\n\n  makeInterval.current = () => {\n    console.log(\"make interval\");\n    auto.current = setInterval(() => {\n      slider.current.style.transition = transitions.auto;\n      moveNext.current();\n    }, 3000);\n  };\n\n  useEffect(() => {\n    if (isAuto) {\n      makeInterval.current();\n    } else {\n      clearInterval(auto.current);\n    }\n    setIsAuto(true);\n    return () => {\n      clearInterval(auto);\n    };\n  }, [isAuto, makeInterval]);\n\n  useEffect(() => {\n    let offset = 100 * counter;\n    slider.current.style.transform = `translateX(-${offset}%)`;\n  }, [counter, slider]);\n\n  return {\n    transitionEnd,\n    clickPrev,\n    clickNext,\n    items: newItems,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}