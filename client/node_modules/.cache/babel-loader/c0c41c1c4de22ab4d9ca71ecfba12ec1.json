{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/data909/Projects/bazar-app/src/contexts/CartContext/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useReducer } from \"react\";\nimport { isInCart } from \"../../services/Products\";\nimport cartReducer from \"./cartReducer\";\nexport const CartContext = /*#__PURE__*/createContext();\nconst initialState = {\n  items: [],\n  total: 0,\n  isUpdate: false\n};\n\nfunction CartContextProvider({\n  children\n}) {\n  _s();\n\n  const [state, dispach] = useReducer(cartReducer, initialState);\n\n  function addItem(newProduct, quantity = 0) {\n    if (quantity) {\n      addItemWithQuantity(newProduct, quantity);\n    } else {\n      addItemWithoutQuantity(newProduct);\n    }\n  }\n\n  function addItemWithoutQuantity(newProduct) {\n    const id = newProduct.id;\n\n    if (isInCart(id, state.items)) {\n      changeQuantity(id);\n      return;\n    }\n\n    dispach({\n      type: \"ADD_ITEM\",\n      payload: newProduct\n    });\n  }\n\n  function addItemWithQuantity(newProduct, quantity) {\n    const id = newProduct.id;\n\n    if (!isInCart(id, state.items)) {\n      dispach({\n        type: \"ADD_ITEM\",\n        payload: newProduct\n      });\n    }\n\n    changeQuantity(id, quantity);\n  }\n\n  function removeItem(id) {\n    dispach({\n      type: \"REMOVE_ITEM\",\n      payload: id\n    });\n  }\n\n  function updateCart(isUpdate) {\n    dispach({\n      type: \"UPDATE_CART\",\n      payload: isUpdate\n    });\n  }\n\n  function changeQuantity(id, quantity = 0) {\n    dispach({\n      type: \"CHANGE_QUANTITY\",\n      payload: {\n        id,\n        quantity\n      }\n    });\n  }\n\n  function getItem(id) {\n    if (isInCart(id, state.items)) {\n      const item = state.items.find(item => item.id === id);\n      return item;\n    }\n\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cart: state,\n      addItem,\n      removeItem,\n      getItem,\n      updateCart,\n      changeQuantity\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CartContextProvider, \"uQxAdYq5lPRPdgmkmLbdSLTcgWU=\");\n\n_c = CartContextProvider;\nexport default CartContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartContextProvider\");","map":{"version":3,"sources":["/home/data909/Projects/bazar-app/src/contexts/CartContext/index.js"],"names":["React","createContext","useReducer","isInCart","cartReducer","CartContext","initialState","items","total","isUpdate","CartContextProvider","children","state","dispach","addItem","newProduct","quantity","addItemWithQuantity","addItemWithoutQuantity","id","changeQuantity","type","payload","removeItem","updateCart","getItem","item","find","cart"],"mappings":"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","sourcesContent":["import React, { createContext, useReducer } from \"react\";\nimport { isInCart } from \"../../services/Products\";\nimport cartReducer from \"./cartReducer\";\n\nexport const CartContext = createContext();\n\nconst initialState = { items: [], total: 0, isUpdate: false };\n\nfunction CartContextProvider({ children }) {\n  const [state, dispach] = useReducer(cartReducer, initialState);\n\n  function addItem(newProduct, quantity = 0) {\n    if (quantity) {\n      addItemWithQuantity(newProduct, quantity);\n    } else {\n      addItemWithoutQuantity(newProduct);\n    }\n  }\n\n  function addItemWithoutQuantity(newProduct) {\n    const id = newProduct.id;\n\n    if (isInCart(id, state.items)) {\n      changeQuantity(id);\n      return;\n    }\n    dispach({ type: \"ADD_ITEM\", payload: newProduct });\n  }\n\n  function addItemWithQuantity(newProduct, quantity) {\n    const id = newProduct.id;\n\n    if (!isInCart(id, state.items)) {\n      dispach({ type: \"ADD_ITEM\", payload: newProduct });\n    }\n    changeQuantity(id, quantity);\n  }\n\n  function removeItem(id) {\n    dispach({ type: \"REMOVE_ITEM\", payload: id });\n  }\n\n  function updateCart(isUpdate) {\n    dispach({ type: \"UPDATE_CART\", payload: isUpdate });\n  }\n\n  function changeQuantity(id, quantity = 0) {\n    dispach({\n      type: \"CHANGE_QUANTITY\",\n      payload: { id, quantity },\n    });\n  }\n\n  function getItem(id) {\n    if (isInCart(id, state.items)) {\n      const item = state.items.find((item) => item.id === id);\n      return item;\n    }\n    return null;\n  }\n\n  return (\n    <CartContext.Provider\n      value={{\n        cart: state,\n        addItem,\n        removeItem,\n        getItem,\n        updateCart,\n        changeQuantity,\n      }}\n    >\n      {children}\n    </CartContext.Provider>\n  );\n}\n\nexport default CartContextProvider;\n"]},"metadata":{},"sourceType":"module"}