{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\n\nfunction useFetch(url) {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [error, setError] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    setIsLoading(true);\n    const data = fetch(url, {\n      mode: \"no-cors\"\n    });\n    data.then(data => {\n      console.log(data);\n      if (data.ok) return data.json();\n      throw Error(\"Fetching error\");\n    }).then(data => {\n      setData(data);\n      setIsLoading(false);\n    }).catch(error => {\n      setError(error);\n      setIsLoading(false);\n    });\n  }, [url]);\n  return [error, data, isLoading];\n}\n\n_s(useFetch, \"uhzndTr8hBWQMMHvxOjHX+c0zew=\");\n\nexport default useFetch;","map":{"version":3,"sources":["/home/data909/Projects/bazar-app/src/hooks/useFetch.js"],"names":["useEffect","useState","useFetch","url","data","setData","error","setError","isLoading","setIsLoading","fetch","mode","then","console","log","ok","json","Error","catch"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAEA,SAASC,QAAT,CAAkBC,GAAlB,EAAuB;AAAA;;AACrB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,KAAD,CAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,UAAML,IAAI,GAAGM,KAAK,CAACP,GAAD,EAAM;AAAEQ,MAAAA,IAAI,EAAE;AAAR,KAAN,CAAlB;AACAP,IAAAA,IAAI,CACDQ,IADH,CACSR,IAAD,IAAU;AACdS,MAAAA,OAAO,CAACC,GAAR,CAAYV,IAAZ;AACA,UAAIA,IAAI,CAACW,EAAT,EAAa,OAAOX,IAAI,CAACY,IAAL,EAAP;AACb,YAAMC,KAAK,CAAC,gBAAD,CAAX;AACD,KALH,EAMGL,IANH,CAMSR,IAAD,IAAU;AACdC,MAAAA,OAAO,CAACD,IAAD,CAAP;AACAK,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KATH,EAUGS,KAVH,CAUUZ,KAAD,IAAW;AAChBC,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACAG,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAbH;AAcD,GAjBQ,EAiBN,CAACN,GAAD,CAjBM,CAAT;AAmBA,SAAO,CAACG,KAAD,EAAQF,IAAR,EAAcI,SAAd,CAAP;AACD;;GAzBQN,Q;;AA2BT,eAAeA,QAAf","sourcesContent":["import { useEffect, useState } from \"react\";\n\nfunction useFetch(url) {\n  const [data, setData] = useState([]);\n  const [error, setError] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    const data = fetch(url, { mode: \"no-cors\" });\n    data\n      .then((data) => {\n        console.log(data);\n        if (data.ok) return data.json();\n        throw Error(\"Fetching error\");\n      })\n      .then((data) => {\n        setData(data);\n        setIsLoading(false);\n      })\n      .catch((error) => {\n        setError(error);\n        setIsLoading(false);\n      });\n  }, [url]);\n\n  return [error, data, isLoading];\n}\n\nexport default useFetch;\n"]},"metadata":{},"sourceType":"module"}