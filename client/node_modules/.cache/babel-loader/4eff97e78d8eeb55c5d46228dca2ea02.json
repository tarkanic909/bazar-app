{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/data909/Projects/bazar-app/src/contexts/CartContext/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useReducer, useRef } from \"react\";\nimport { isInCart } from \"../../services/products\";\nimport cartReducer from \"./cartReducer\";\nimport actions from \"./actions\";\nexport const CartContext = /*#__PURE__*/createContext();\nconst initialState = {\n  items: [],\n  total: 0,\n  isUpdate: false\n};\n\nfunction CartContextProvider({\n  children\n}) {\n  _s();\n\n  const [state, dispach] = useReducer(cartReducer, initialState);\n\n  function addItem(newProduct, quantity = 0) {\n    if (quantity) {\n      addItemWithQuantity(newProduct, quantity);\n    } else {\n      addItemWithoutQuantity(newProduct);\n    }\n  }\n\n  function addItemWithoutQuantity(newProduct) {\n    const id = newProduct.id;\n\n    if (isInCart(id, state.items)) {\n      changeQuantity.current(id);\n      return;\n    }\n\n    dispach({\n      type: actions.ADD_ITEM,\n      payload: newProduct\n    });\n  }\n\n  function addItemWithQuantity(newProduct, quantity) {\n    const id = newProduct.id;\n\n    if (!isInCart(id, state.items)) {\n      dispach({\n        type: actions.ADD_ITEM,\n        payload: newProduct\n      });\n    }\n\n    changeQuantity.current(id, quantity);\n  }\n\n  function removeItem(id) {\n    dispach({\n      type: actions.REMOVE_ITEM,\n      payload: id\n    });\n  }\n\n  const updateCart = useRef();\n\n  updateCart.current = isUpdate => {\n    dispach({\n      type: actions.UPDATE_CART,\n      payload: isUpdate\n    });\n  };\n\n  const changeQuantity = useRef();\n\n  changeQuantity.current = (id, quantity = 0) => {\n    dispach({\n      type: actions.CHANGE_QUANTITY,\n      payload: {\n        id,\n        quantity\n      }\n    });\n  };\n\n  function getItem(id) {\n    if (isInCart(id, state.items)) {\n      const item = state.items.find(item => item.id === id);\n      return item;\n    }\n\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cart: state,\n      addItem,\n      removeItem,\n      getItem,\n      updateCart,\n      changeQuantity\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CartContextProvider, \"vIB0oOwIA6FOX5m9gUupaaLgfYU=\");\n\n_c = CartContextProvider;\nexport default CartContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartContextProvider\");","map":{"version":3,"sources":["/home/data909/Projects/bazar-app/src/contexts/CartContext/index.js"],"names":["React","createContext","useReducer","useRef","isInCart","cartReducer","actions","CartContext","initialState","items","total","isUpdate","CartContextProvider","children","state","dispach","addItem","newProduct","quantity","addItemWithQuantity","addItemWithoutQuantity","id","changeQuantity","current","type","ADD_ITEM","payload","removeItem","REMOVE_ITEM","updateCart","UPDATE_CART","CHANGE_QUANTITY","getItem","item","find","cart"],"mappings":"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","sourcesContent":["import React, { createContext, useReducer, useRef } from \"react\";\nimport { isInCart } from \"../../services/products\";\nimport cartReducer from \"./cartReducer\";\nimport actions from \"./actions\";\n\nexport const CartContext = createContext();\n\nconst initialState = { items: [], total: 0, isUpdate: false };\n\nfunction CartContextProvider({ children }) {\n  const [state, dispach] = useReducer(cartReducer, initialState);\n\n  function addItem(newProduct, quantity = 0) {\n    if (quantity) {\n      addItemWithQuantity(newProduct, quantity);\n    } else {\n      addItemWithoutQuantity(newProduct);\n    }\n  }\n\n  function addItemWithoutQuantity(newProduct) {\n    const id = newProduct.id;\n\n    if (isInCart(id, state.items)) {\n      changeQuantity.current(id);\n      return;\n    }\n    dispach({ type: actions.ADD_ITEM, payload: newProduct });\n  }\n\n  function addItemWithQuantity(newProduct, quantity) {\n    const id = newProduct.id;\n\n    if (!isInCart(id, state.items)) {\n      dispach({ type: actions.ADD_ITEM, payload: newProduct });\n    }\n    changeQuantity.current(id, quantity);\n  }\n\n  function removeItem(id) {\n    dispach({ type: actions.REMOVE_ITEM, payload: id });\n  }\n\n  const updateCart = useRef();\n\n  updateCart.current = (isUpdate) => {\n    dispach({ type: actions.UPDATE_CART, payload: isUpdate });\n  };\n\n  const changeQuantity = useRef();\n\n  changeQuantity.current = (id, quantity = 0) => {\n    dispach({\n      type: actions.CHANGE_QUANTITY,\n      payload: { id, quantity },\n    });\n  };\n\n  function getItem(id) {\n    if (isInCart(id, state.items)) {\n      const item = state.items.find((item) => item.id === id);\n      return item;\n    }\n    return null;\n  }\n\n  return (\n    <CartContext.Provider\n      value={{\n        cart: state,\n        addItem,\n        removeItem,\n        getItem,\n        updateCart,\n        changeQuantity,\n      }}\n    >\n      {children}\n    </CartContext.Provider>\n  );\n}\n\nexport default CartContextProvider;\n"]},"metadata":{},"sourceType":"module"}