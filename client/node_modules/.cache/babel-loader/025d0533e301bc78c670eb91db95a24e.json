{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/data909/Projects/bazar-app/src/shared/QuantityChanger/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { CartContext } from \"../../contexts/CartContext\";\nimport AddToCart from \"../AddToCart\";\nimport \"./index.scss\";\n\nfunction QuantityChanger({\n  product,\n  id,\n  quantity = 0,\n  isAddToCart = false,\n  className\n}) {\n  _s();\n\n  const [value, setValue] = useState(quantity || 1);\n  const {\n    cart,\n    changeQuantity,\n    updateCart\n  } = useContext(CartContext); // useEffect(() => {\n  //   setValue(quantity);\n  // }, [quantity]);\n\n  useEffect(() => {\n    if (cart.isUpdate) changeQuantity(id, parseInt(value));\n    updateCart(false);\n  }, [cart.isUpdate, value, updateCart, changeQuantity, id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quantity-changer \" + className,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quantity-changer__form\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"quantity-changer__button\",\n        onClick: () => {\n          setValue(prevValue => parseInt(prevValue) - 1);\n        },\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"quantity-changer__input\",\n        onChange: e => {\n          setValue(parseInt(e.target.value));\n        },\n        type: \"number\",\n        value: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"quantity-changer__button\",\n        onClick: () => {\n          setValue(prevValue => parseInt(prevValue) + 1);\n        },\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), isAddToCart && /*#__PURE__*/_jsxDEV(AddToCart, {\n      quantity: value + quantity,\n      item: product\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(QuantityChanger, \"i5xH4+cE4N8OQnyk4XQ5vU+phOU=\");\n\n_c = QuantityChanger;\nexport default QuantityChanger;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuantityChanger\");","map":{"version":3,"sources":["/home/data909/Projects/bazar-app/src/shared/QuantityChanger/index.js"],"names":["React","useContext","useEffect","useState","CartContext","AddToCart","QuantityChanger","product","id","quantity","isAddToCart","className","value","setValue","cart","changeQuantity","updateCart","isUpdate","parseInt","prevValue","e","target"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,WAAT,QAA4B,4BAA5B;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAO,cAAP;;AAEA,SAASC,eAAT,CAAyB;AACvBC,EAAAA,OADuB;AAEvBC,EAAAA,EAFuB;AAGvBC,EAAAA,QAAQ,GAAG,CAHY;AAIvBC,EAAAA,WAAW,GAAG,KAJS;AAKvBC,EAAAA;AALuB,CAAzB,EAMG;AAAA;;AACD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAACM,QAAQ,IAAI,CAAb,CAAlC;AACA,QAAM;AAAEK,IAAAA,IAAF;AAAQC,IAAAA,cAAR;AAAwBC,IAAAA;AAAxB,MAAuCf,UAAU,CAACG,WAAD,CAAvD,CAFC,CAID;AACA;AACA;;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIY,IAAI,CAACG,QAAT,EAAmBF,cAAc,CAACP,EAAD,EAAKU,QAAQ,CAACN,KAAD,CAAb,CAAd;AACnBI,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAHQ,EAGN,CAACF,IAAI,CAACG,QAAN,EAAgBL,KAAhB,EAAuBI,UAAvB,EAAmCD,cAAnC,EAAmDP,EAAnD,CAHM,CAAT;AAKA,sBACE;AAAK,IAAA,SAAS,EAAE,sBAAsBG,SAAtC;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA,8BACE;AACE,QAAA,SAAS,EAAC,0BADZ;AAEE,QAAA,OAAO,EAAE,MAAM;AACbE,UAAAA,QAAQ,CAAEM,SAAD,IAAeD,QAAQ,CAACC,SAAD,CAAR,GAAsB,CAAtC,CAAR;AACD,SAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eASE;AACE,QAAA,SAAS,EAAC,yBADZ;AAEE,QAAA,QAAQ,EAAGC,CAAD,IAAO;AACfP,UAAAA,QAAQ,CAACK,QAAQ,CAACE,CAAC,CAACC,MAAF,CAAST,KAAV,CAAT,CAAR;AACD,SAJH;AAKE,QAAA,IAAI,EAAC,QALP;AAME,QAAA,KAAK,EAAEA;AANT;AAAA;AAAA;AAAA;AAAA,cATF,eAiBE;AACE,QAAA,SAAS,EAAC,0BADZ;AAEE,QAAA,OAAO,EAAE,MAAM;AACbC,UAAAA,QAAQ,CAAEM,SAAD,IAAeD,QAAQ,CAACC,SAAD,CAAR,GAAsB,CAAtC,CAAR;AACD,SAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EA2BGT,WAAW,iBAAI,QAAC,SAAD;AAAW,MAAA,QAAQ,EAAEE,KAAK,GAAGH,QAA7B;AAAuC,MAAA,IAAI,EAAEF;AAA7C;AAAA;AAAA;AAAA;AAAA,YA3BlB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD;;GAlDQD,e;;KAAAA,e;AAoDT,eAAeA,eAAf","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport { CartContext } from \"../../contexts/CartContext\";\nimport AddToCart from \"../AddToCart\";\nimport \"./index.scss\";\n\nfunction QuantityChanger({\n  product,\n  id,\n  quantity = 0,\n  isAddToCart = false,\n  className,\n}) {\n  const [value, setValue] = useState(quantity || 1);\n  const { cart, changeQuantity, updateCart } = useContext(CartContext);\n\n  // useEffect(() => {\n  //   setValue(quantity);\n  // }, [quantity]);\n\n  useEffect(() => {\n    if (cart.isUpdate) changeQuantity(id, parseInt(value));\n    updateCart(false);\n  }, [cart.isUpdate, value, updateCart, changeQuantity, id]);\n\n  return (\n    <div className={\"quantity-changer \" + className}>\n      <div className=\"quantity-changer__form\">\n        <button\n          className=\"quantity-changer__button\"\n          onClick={() => {\n            setValue((prevValue) => parseInt(prevValue) - 1);\n          }}\n        >\n          -\n        </button>\n        <input\n          className=\"quantity-changer__input\"\n          onChange={(e) => {\n            setValue(parseInt(e.target.value));\n          }}\n          type=\"number\"\n          value={value}\n        />\n        <button\n          className=\"quantity-changer__button\"\n          onClick={() => {\n            setValue((prevValue) => parseInt(prevValue) + 1);\n          }}\n        >\n          +\n        </button>\n      </div>\n      {isAddToCart && <AddToCart quantity={value + quantity} item={product} />}\n    </div>\n  );\n}\n\nexport default QuantityChanger;\n"]},"metadata":{},"sourceType":"module"}