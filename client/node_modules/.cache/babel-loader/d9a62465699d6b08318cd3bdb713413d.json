{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\n\nfunction useFetch(url) {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [error, setError] = useState();\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    setIsLoading(true);\n    const data = fetch(url);\n    console.log(data);\n    data.then(data => {\n      return data.json();\n    }).then(data => {\n      setData(data);\n      setIsLoading(false);\n    }).catch(error => {\n      setError(error);\n      setIsLoading(false);\n    });\n  }, [url]);\n  return [error, data, isLoading];\n}\n\n_s(useFetch, \"GIG1QwDs0MxdnAXlJSoHXP5Bkvk=\");\n\nexport default useFetch;","map":{"version":3,"sources":["/home/data909/Projects/bazar-app/src/hooks/useFetch.js"],"names":["useEffect","useState","useFetch","url","data","setData","error","setError","isLoading","setIsLoading","fetch","console","log","then","json","catch"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAEA,SAASC,QAAT,CAAkBC,GAAlB,EAAuB;AAAA;;AACrB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,EAAlC;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,KAAD,CAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,UAAML,IAAI,GAAGM,KAAK,CAACP,GAAD,CAAlB;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAYR,IAAZ;AACAA,IAAAA,IAAI,CACDS,IADH,CACST,IAAD,IAAU;AACd,aAAOA,IAAI,CAACU,IAAL,EAAP;AACD,KAHH,EAIGD,IAJH,CAIST,IAAD,IAAU;AACdC,MAAAA,OAAO,CAACD,IAAD,CAAP;AACAK,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAPH,EAQGM,KARH,CAQUT,KAAD,IAAW;AAChBC,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACAG,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAXH;AAYD,GAhBQ,EAgBN,CAACN,GAAD,CAhBM,CAAT;AAkBA,SAAO,CAACG,KAAD,EAAQF,IAAR,EAAcI,SAAd,CAAP;AACD;;GAxBQN,Q;;AA0BT,eAAeA,QAAf","sourcesContent":["import { useEffect, useState } from \"react\";\n\nfunction useFetch(url) {\n  const [data, setData] = useState([]);\n  const [error, setError] = useState();\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    const data = fetch(url);\n    console.log(data);\n    data\n      .then((data) => {\n        return data.json();\n      })\n      .then((data) => {\n        setData(data);\n        setIsLoading(false);\n      })\n      .catch((error) => {\n        setError(error);\n        setIsLoading(false);\n      });\n  }, [url]);\n\n  return [error, data, isLoading];\n}\n\nexport default useFetch;\n"]},"metadata":{},"sourceType":"module"}