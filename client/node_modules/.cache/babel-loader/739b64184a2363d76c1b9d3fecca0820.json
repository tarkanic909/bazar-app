{"ast":null,"code":"import { getTotal } from \"../../services/products\";\nimport actions from \"./actions\";\n\nfunction cartReducer(state, action) {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case actions.ADD_ITEM:\n      return { ...state,\n        total: getTotal(state.items),\n        items: [...state.items, { ...payload,\n          quantity: 1\n        }]\n      };\n\n    case actions.REMOVE_ITEM:\n      let newItems = [...state.items];\n      newItems = newItems.filter(item => item.id !== payload);\n      return { ...state,\n        total: getTotal(state.items),\n        items: [...newItems]\n      };\n\n    case actions.CHANGE_QUANTITY:\n      const quantity = payload.quantity;\n      const item = state.items.find(item => item.id === payload.id);\n\n      if (quantity) {\n        item.quantity = quantity;\n      } else {\n        item.quantity++;\n      }\n\n      return { ...state,\n        total: getTotal(state.items)\n      };\n\n    case \"UPDATE_CART\":\n      return { ...state,\n        isUpdate: payload\n      };\n\n    default:\n      if (!action.hasOwnProperty(\"type\")) {\n        throw new Error(\"cartReducer: You must set type of action\");\n      }\n\n      throw new Error(`cartReducer: Cant find action of this type: ${type}`);\n  }\n}\n\nexport default cartReducer;","map":{"version":3,"sources":["/home/data909/Projects/bazar-app/src/contexts/CartContext/cartReducer.js"],"names":["getTotal","actions","cartReducer","state","action","type","payload","ADD_ITEM","total","items","quantity","REMOVE_ITEM","newItems","filter","item","id","CHANGE_QUANTITY","find","isUpdate","hasOwnProperty","Error"],"mappings":"AAAA,SAASA,QAAT,QAAyB,yBAAzB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4BC,MAA5B,EAAoC;AAClC,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AACA,UAAQC,IAAR;AACE,SAAKJ,OAAO,CAACM,QAAb;AACE,aAAO,EACL,GAAGJ,KADE;AAELK,QAAAA,KAAK,EAAER,QAAQ,CAACG,KAAK,CAACM,KAAP,CAFV;AAGLA,QAAAA,KAAK,EAAE,CAAC,GAAGN,KAAK,CAACM,KAAV,EAAiB,EAAE,GAAGH,OAAL;AAAcI,UAAAA,QAAQ,EAAE;AAAxB,SAAjB;AAHF,OAAP;;AAMF,SAAKT,OAAO,CAACU,WAAb;AACE,UAAIC,QAAQ,GAAG,CAAC,GAAGT,KAAK,CAACM,KAAV,CAAf;AACAG,MAAAA,QAAQ,GAAGA,QAAQ,CAACC,MAAT,CAAiBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYT,OAAtC,CAAX;AAEA,aAAO,EACL,GAAGH,KADE;AAELK,QAAAA,KAAK,EAAER,QAAQ,CAACG,KAAK,CAACM,KAAP,CAFV;AAGLA,QAAAA,KAAK,EAAE,CAAC,GAAGG,QAAJ;AAHF,OAAP;;AAMF,SAAKX,OAAO,CAACe,eAAb;AACE,YAAMN,QAAQ,GAAGJ,OAAO,CAACI,QAAzB;AACA,YAAMI,IAAI,GAAGX,KAAK,CAACM,KAAN,CAAYQ,IAAZ,CAAkBH,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYT,OAAO,CAACS,EAA/C,CAAb;;AAEA,UAAIL,QAAJ,EAAc;AACZI,QAAAA,IAAI,CAACJ,QAAL,GAAgBA,QAAhB;AACD,OAFD,MAEO;AACLI,QAAAA,IAAI,CAACJ,QAAL;AACD;;AACD,aAAO,EACL,GAAGP,KADE;AAELK,QAAAA,KAAK,EAAER,QAAQ,CAACG,KAAK,CAACM,KAAP;AAFV,OAAP;;AAKF,SAAK,aAAL;AACE,aAAO,EACL,GAAGN,KADE;AAELe,QAAAA,QAAQ,EAAEZ;AAFL,OAAP;;AAKF;AACE,UAAI,CAACF,MAAM,CAACe,cAAP,CAAsB,MAAtB,CAAL,EAAoC;AAClC,cAAM,IAAIC,KAAJ,CAAU,0CAAV,CAAN;AACD;;AACD,YAAM,IAAIA,KAAJ,CAAW,+CAA8Cf,IAAK,EAA9D,CAAN;AA1CJ;AA4CD;;AAED,eAAeH,WAAf","sourcesContent":["import { getTotal } from \"../../services/products\";\nimport actions from \"./actions\";\n\nfunction cartReducer(state, action) {\n  const { type, payload } = action;\n  switch (type) {\n    case actions.ADD_ITEM:\n      return {\n        ...state,\n        total: getTotal(state.items),\n        items: [...state.items, { ...payload, quantity: 1 }],\n      };\n\n    case actions.REMOVE_ITEM:\n      let newItems = [...state.items];\n      newItems = newItems.filter((item) => item.id !== payload);\n\n      return {\n        ...state,\n        total: getTotal(state.items),\n        items: [...newItems],\n      };\n\n    case actions.CHANGE_QUANTITY:\n      const quantity = payload.quantity;\n      const item = state.items.find((item) => item.id === payload.id);\n\n      if (quantity) {\n        item.quantity = quantity;\n      } else {\n        item.quantity++;\n      }\n      return {\n        ...state,\n        total: getTotal(state.items),\n      };\n\n    case \"UPDATE_CART\":\n      return {\n        ...state,\n        isUpdate: payload,\n      };\n\n    default:\n      if (!action.hasOwnProperty(\"type\")) {\n        throw new Error(\"cartReducer: You must set type of action\");\n      }\n      throw new Error(`cartReducer: Cant find action of this type: ${type}`);\n  }\n}\n\nexport default cartReducer;\n"]},"metadata":{},"sourceType":"module"}