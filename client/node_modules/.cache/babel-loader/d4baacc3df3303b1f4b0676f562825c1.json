{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/data909/Projects/bazar-app/src/components/CategoriesFilter/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect } from \"react\";\nimport { ProductsContext } from \"../../contexts/ProductsContext\";\nimport useFetch from \"../../hooks/useFetch\";\nimport FilterWidgetItem from \"../../shared/FilterWidget/FilterWidgetItem\";\nimport Loading from \"../../shared/Loading\";\n\nfunction CategoriesFilter({\n  setContent\n}) {\n  _s();\n\n  const [error, categories, isLoading] = useFetch(\"http://localhost:3004/categories\");\n  const {\n    filterByCategory\n  } = useContext(ProductsContext);\n  useEffect(() => {\n    setContent(categories);\n  }, [categories]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error.message && error.message || /*#__PURE__*/_jsxDEV(Loading, {\n      isLoading: isLoading,\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: categories.map((category, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(FilterWidgetItem, {\n            category: category,\n            subcategories: category.subcategories,\n            onClick: () => {\n              filterByCategory(category.category);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CategoriesFilter, \"/vKrysU8ez1CKHIVYr+85MorXJs=\", false, function () {\n  return [useFetch];\n});\n\n_c = CategoriesFilter;\nexport default CategoriesFilter;\n\nvar _c;\n\n$RefreshReg$(_c, \"CategoriesFilter\");","map":{"version":3,"sources":["/home/data909/Projects/bazar-app/src/components/CategoriesFilter/index.js"],"names":["React","useContext","useEffect","ProductsContext","useFetch","FilterWidgetItem","Loading","CategoriesFilter","setContent","error","categories","isLoading","filterByCategory","message","map","category","index","subcategories"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,gBAAP,MAA6B,4CAA7B;AACA,OAAOC,OAAP,MAAoB,sBAApB;;AAEA,SAASC,gBAAT,CAA0B;AAAEC,EAAAA;AAAF,CAA1B,EAA0C;AAAA;;AACxC,QAAM,CAACC,KAAD,EAAQC,UAAR,EAAoBC,SAApB,IAAiCP,QAAQ,CAC7C,kCAD6C,CAA/C;AAGA,QAAM;AAAEQ,IAAAA;AAAF,MAAuBX,UAAU,CAACE,eAAD,CAAvC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,UAAU,CAACE,UAAD,CAAV;AACD,GAFQ,EAEN,CAACA,UAAD,CAFM,CAAT;AAGA,sBACE;AAAA,cACID,KAAK,CAACI,OAAN,IAAiBJ,KAAK,CAACI,OAAxB,iBACC,QAAC,OAAD;AAAS,MAAA,SAAS,EAAEF,SAApB;AAAA,6BACE;AAAA,kBACGD,UAAU,CAACI,GAAX,CAAe,CAACC,QAAD,EAAWC,KAAX,kBACd;AAAA,iCACE,QAAC,gBAAD;AACE,YAAA,QAAQ,EAAED,QADZ;AAEE,YAAA,aAAa,EAAEA,QAAQ,CAACE,aAF1B;AAGE,YAAA,OAAO,EAAE,MAAM;AACbL,cAAAA,gBAAgB,CAACG,QAAQ,CAACA,QAAV,CAAhB;AACD;AALH;AAAA;AAAA;AAAA;AAAA;AADF,WAASC,KAAT;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GA7BQT,gB;UACgCH,Q;;;KADhCG,gB;AA+BT,eAAeA,gBAAf","sourcesContent":["import React, { useContext, useEffect } from \"react\";\nimport { ProductsContext } from \"../../contexts/ProductsContext\";\nimport useFetch from \"../../hooks/useFetch\";\nimport FilterWidgetItem from \"../../shared/FilterWidget/FilterWidgetItem\";\nimport Loading from \"../../shared/Loading\";\n\nfunction CategoriesFilter({ setContent }) {\n  const [error, categories, isLoading] = useFetch(\n    \"http://localhost:3004/categories\"\n  );\n  const { filterByCategory } = useContext(ProductsContext);\n  useEffect(() => {\n    setContent(categories);\n  }, [categories]);\n  return (\n    <div>\n      {(error.message && error.message) || (\n        <Loading isLoading={isLoading}>\n          <ul>\n            {categories.map((category, index) => (\n              <li key={index}>\n                <FilterWidgetItem\n                  category={category}\n                  subcategories={category.subcategories}\n                  onClick={() => {\n                    filterByCategory(category.category);\n                  }}\n                />\n              </li>\n            ))}\n          </ul>\n        </Loading>\n      )}\n    </div>\n  );\n}\n\nexport default CategoriesFilter;\n"]},"metadata":{},"sourceType":"module"}