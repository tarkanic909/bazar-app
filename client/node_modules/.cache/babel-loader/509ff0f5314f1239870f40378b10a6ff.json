{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useRef, useState } from \"react\";\nexport default function useSlider(items, transitions, slider) {\n  _s();\n\n  const [counter, setCounter] = useState(1);\n  const [isAuto, setIsAuto] = useState(true);\n  const [newSlides, setNewSlides] = useState([]);\n  useEffect(() => {\n    const aaa = [{ ...items[items.length - 1]\n    }, { ...items[0]\n    }, { ...items[1]\n    }];\n    setNewSlides(aaa);\n  }, [items]);\n  useEffect(() => {\n    console.log(newSlides);\n  }, [newSlides]);\n  const newItems = [{ ...items[items.length - 1]\n  }, ...items, { ...items[0]\n  }];\n  const auto = useRef();\n  const moveNext = useRef(() => {});\n  const makeInterval = useRef(() => {});\n\n  function movePrev() {\n    setCounter(prevCounter => {\n      if (prevCounter === 0) {\n        return prevCounter;\n      }\n\n      return prevCounter - 1;\n    });\n  }\n\n  moveNext.current = () => {\n    // slider.current.style.transition = transitions.auto;\n    setCounter(prevCounter => {\n      if (counter >= newItems.length - 1) {\n        return 1;\n      }\n\n      return prevCounter + 1;\n    });\n    let bbb = [...newSlides];\n    bbb.shift();\n    bbb.push({ ...items[counter + 1]\n    });\n    console.log(bbb); // setNewSlides((prevItems) => {\n    // console.log(prevItems);\n    // return prevItems;\n    // });\n  };\n\n  function clickPrev() {\n    setIsAuto(false);\n    slider.current.style.transition = transitions.manual;\n    movePrev();\n  }\n\n  function clickNext() {\n    console.log(newSlides);\n    setIsAuto(false);\n    slider.current.style.transition = transitions.manual;\n    moveNext.current();\n  }\n\n  function transitionEnd() {\n    if (counter === 0) {\n      slider.current.style.transition = transitions.end;\n      setCounter(newItems.length - 2);\n      return;\n    }\n\n    if (counter === 5) {\n      slider.current.style.transition = transitions.end;\n      setCounter(1);\n      return;\n    }\n  }\n\n  makeInterval.current = () => {\n    console.log(\"make interval\");\n    auto.current = setInterval(() => {\n      slider.current.style.transition = transitions.auto;\n      moveNext.current();\n    }, 3000);\n  };\n\n  useEffect(() => {\n    if (isAuto) {// makeInterval.current();\n    } else {\n      clearInterval(auto.current);\n    }\n\n    setIsAuto(true);\n    return () => {\n      clearInterval(auto);\n    };\n  }, [isAuto, makeInterval]);\n  useEffect(() => {\n    let offset = 100 * counter;\n    slider.current.style.transform = `translateX(-${offset}%)`;\n  }, [counter, slider]);\n  return {\n    transitionEnd,\n    clickPrev,\n    clickNext,\n    items: newItems\n  };\n}\n\n_s(useSlider, \"bmpa0uB03gX/UZsQuHkiFtAa+aw=\");","map":{"version":3,"sources":["/home/data909/Projects/bazar-app/src/hooks/useSlider.js"],"names":["useEffect","useRef","useState","useSlider","items","transitions","slider","counter","setCounter","isAuto","setIsAuto","newSlides","setNewSlides","aaa","length","console","log","newItems","auto","moveNext","makeInterval","movePrev","prevCounter","current","bbb","shift","push","clickPrev","style","transition","manual","clickNext","transitionEnd","end","setInterval","clearInterval","offset","transform"],"mappings":"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","sourcesContent":["import { useEffect, useRef, useState } from \"react\";\n\nexport default function useSlider(items, transitions, slider) {\n  const [counter, setCounter] = useState(1);\n  const [isAuto, setIsAuto] = useState(true);\n  const [newSlides, setNewSlides] = useState([]);\n\n  useEffect(() => {\n    const aaa = [\n      { ...items[items.length - 1] },\n      { ...items[0] },\n      { ...items[1] },\n    ];\n    setNewSlides(aaa);\n  }, [items]);\n\n  useEffect(() => {\n    console.log(newSlides);\n  }, [newSlides]);\n\n  const newItems = [{ ...items[items.length - 1] }, ...items, { ...items[0] }];\n  const auto = useRef();\n  const moveNext = useRef(() => {});\n  const makeInterval = useRef(() => {});\n\n  function movePrev() {\n    setCounter((prevCounter) => {\n      if (prevCounter === 0) {\n        return prevCounter;\n      }\n      return prevCounter - 1;\n    });\n  }\n\n  moveNext.current = () => {\n    // slider.current.style.transition = transitions.auto;\n    setCounter((prevCounter) => {\n      if (counter >= newItems.length - 1) {\n        return 1;\n      }\n      return prevCounter + 1;\n    });\n    let bbb = [...newSlides];\n    bbb.shift();\n    bbb.push({ ...items[counter + 1] });\n    console.log(bbb);\n    // setNewSlides((prevItems) => {\n    // console.log(prevItems);\n    // return prevItems;\n    // });\n  };\n\n  function clickPrev() {\n    setIsAuto(false);\n    slider.current.style.transition = transitions.manual;\n    movePrev();\n  }\n\n  function clickNext() {\n    console.log(newSlides);\n    setIsAuto(false);\n    slider.current.style.transition = transitions.manual;\n    moveNext.current();\n  }\n\n  function transitionEnd() {\n    if (counter === 0) {\n      slider.current.style.transition = transitions.end;\n      setCounter(newItems.length - 2);\n      return;\n    }\n\n    if (counter === 5) {\n      slider.current.style.transition = transitions.end;\n      setCounter(1);\n      return;\n    }\n  }\n\n  makeInterval.current = () => {\n    console.log(\"make interval\");\n    auto.current = setInterval(() => {\n      slider.current.style.transition = transitions.auto;\n      moveNext.current();\n    }, 3000);\n  };\n\n  useEffect(() => {\n    if (isAuto) {\n      // makeInterval.current();\n    } else {\n      clearInterval(auto.current);\n    }\n    setIsAuto(true);\n    return () => {\n      clearInterval(auto);\n    };\n  }, [isAuto, makeInterval]);\n\n  useEffect(() => {\n    let offset = 100 * counter;\n    slider.current.style.transform = `translateX(-${offset}%)`;\n  }, [counter, slider]);\n\n  return {\n    transitionEnd,\n    clickPrev,\n    clickNext,\n    items: newItems,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}