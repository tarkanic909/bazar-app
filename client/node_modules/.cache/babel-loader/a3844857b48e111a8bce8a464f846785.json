{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/data909/Projects/bazar-app/client/src/shared/Pagination/index.js\";\nimport React from \"react\";\nimport \"./index.scss\";\n\nfunction Paginatation({\n  totalItems,\n  itemsPerPage,\n  paginate,\n  currentPage\n}) {\n  const pageNumbers = [];\n\n  for (let i = 1; i <= Math.ceil(totalItems / itemsPerPage); i++) {\n    pageNumbers.push(i);\n  }\n\n  function prevPage() {\n    if (currentPage === 1) return;\n    paginate(currentPage - 1);\n  }\n\n  function nextPage() {\n    if (currentPage === pageNumbers.length) return;\n    paginate(currentPage + 1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Pagination\",\n    children: [currentPage !== 1 ? /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"Pagination__prev\",\n      onClick: prevPage,\n      children: [\" \", \"\\u2039\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this) : null, pageNumbers.map(number => /*#__PURE__*/_jsxDEV(\"span\", {\n      className: currentPage === number ? \"Pagination__button Pagination__button--active\" : \"Pagination__button\",\n      onClick: () => {\n        paginate(number);\n      },\n      children: number\n    }, number, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)), currentPage !== pageNumbers.length ? /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"Pagination__next\",\n      onClick: nextPage,\n      children: \"\\u203A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Paginatation;\nexport default Paginatation;\n\nvar _c;\n\n$RefreshReg$(_c, \"Paginatation\");","map":{"version":3,"sources":["/home/data909/Projects/bazar-app/client/src/shared/Pagination/index.js"],"names":["React","Paginatation","totalItems","itemsPerPage","paginate","currentPage","pageNumbers","i","Math","ceil","push","prevPage","nextPage","length","map","number"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP;;AAEA,SAASC,YAAT,CAAsB;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,YAAd;AAA4BC,EAAAA,QAA5B;AAAsCC,EAAAA;AAAtC,CAAtB,EAA2E;AACzE,QAAMC,WAAW,GAAG,EAApB;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIC,IAAI,CAACC,IAAL,CAAUP,UAAU,GAAGC,YAAvB,CAArB,EAA2DI,CAAC,EAA5D,EAAgE;AAC9DD,IAAAA,WAAW,CAACI,IAAZ,CAAiBH,CAAjB;AACD;;AAED,WAASI,QAAT,GAAoB;AAClB,QAAIN,WAAW,KAAK,CAApB,EAAuB;AACvBD,IAAAA,QAAQ,CAACC,WAAW,GAAG,CAAf,CAAR;AACD;;AAED,WAASO,QAAT,GAAoB;AAClB,QAAIP,WAAW,KAAKC,WAAW,CAACO,MAAhC,EAAwC;AACxCT,IAAAA,QAAQ,CAACC,WAAW,GAAG,CAAf,CAAR;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,eACGA,WAAW,KAAK,CAAhB,gBACC;AAAM,MAAA,SAAS,EAAC,kBAAhB;AAAmC,MAAA,OAAO,EAAEM,QAA5C;AAAA,iBACG,GADH;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,GAKG,IANN,EAQGL,WAAW,CAACQ,GAAZ,CAAiBC,MAAD,iBACf;AACE,MAAA,SAAS,EACPV,WAAW,KAAKU,MAAhB,GACI,+CADJ,GAEI,oBAJR;AAOE,MAAA,OAAO,EAAE,MAAM;AACbX,QAAAA,QAAQ,CAACW,MAAD,CAAR;AACD,OATH;AAAA,gBAWGA;AAXH,OAMOA,MANP;AAAA;AAAA;AAAA;AAAA,YADD,CARH,EAuBGV,WAAW,KAAKC,WAAW,CAACO,MAA5B,gBACC;AAAM,MAAA,SAAS,EAAC,kBAAhB;AAAmC,MAAA,OAAO,EAAED,QAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,GAIG,IA3BN;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD;;KAhDQX,Y;AAkDT,eAAeA,YAAf","sourcesContent":["import React from \"react\";\nimport \"./index.scss\";\n\nfunction Paginatation({ totalItems, itemsPerPage, paginate, currentPage }) {\n  const pageNumbers = [];\n\n  for (let i = 1; i <= Math.ceil(totalItems / itemsPerPage); i++) {\n    pageNumbers.push(i);\n  }\n\n  function prevPage() {\n    if (currentPage === 1) return;\n    paginate(currentPage - 1);\n  }\n\n  function nextPage() {\n    if (currentPage === pageNumbers.length) return;\n    paginate(currentPage + 1);\n  }\n\n  return (\n    <div className=\"Pagination\">\n      {currentPage !== 1 ? (\n        <span className=\"Pagination__prev\" onClick={prevPage}>\n          {\" \"}\n          ‹\n        </span>\n      ) : null}\n\n      {pageNumbers.map((number) => (\n        <span\n          className={\n            currentPage === number\n              ? \"Pagination__button Pagination__button--active\"\n              : \"Pagination__button\"\n          }\n          key={number}\n          onClick={() => {\n            paginate(number);\n          }}\n        >\n          {number}\n        </span>\n      ))}\n      {currentPage !== pageNumbers.length ? (\n        <span className=\"Pagination__next\" onClick={nextPage}>\n          ›\n        </span>\n      ) : null}\n    </div>\n  );\n}\n\nexport default Paginatation;\n"]},"metadata":{},"sourceType":"module"}